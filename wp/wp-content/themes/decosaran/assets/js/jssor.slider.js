var $JssorSlider$ = window.$JssorSlider$ = function (bp, aH) { var G = this; function aR() { var i = this; $JssorAnimator$.call(i, -100000000, 200000000); i.$GetCurrentSlideInfo = function () { var bt = i.$GetPosition_Display(); var bu = Math.floor(bt); var bv = V(bu); var bw = bt - Math.floor(bt); return { $Index: bv, $VirtualIndex: bu, $Position: bw } }; i.$OnPositionChange = function (bv, bu) { var bt = Math.floor(bu); if (bt != bu && bu > bv) { bt++ } g(bt, true); G.$TriggerEvent($JssorSlider$.$EVT_POSITION_CHANGE, V(bu), V(bv), bu, bv) } } function R() { var i = this; $JssorAnimator$.call(i, 0, 0, { $LoopLength: t }); $Jssor$.$Each(a9, function (bt) { (bs & 1) && bt.$SetLoopLength(t); i.$Chain(bt); bt.$Shift(ac / c) }) } function Q() { var i = this; var bt = F.$Elmt; $JssorAnimator$.call(i, -1, 2, { $Easing: $JssorEasing$.$EaseLinear, $Setter: { $Position: Z }, $LoopLength: t }, bt, { $Position: 1 }, { $Position: -2 }); i.$Wrapper = bt; $JssorDebug$.$Execute(function () { $Jssor$.$Attribute(F.$Elmt, "debug-id", "slide_container") }) } function bc(bx, bw) { var by = this; var bv; var bt; var bz; var i; var bu; $JssorAnimator$.call(by, -100000000, 200000000, { $IntervalMax: 100 }); by.$OnStart = function () { af = true; b = null; G.$TriggerEvent($JssorSlider$.$EVT_SWIPE_START, V(A.$GetPosition()), A.$GetPosition()) }; by.$OnStop = function () { af = false; i = false; var bA = A.$GetCurrentSlideInfo(); G.$TriggerEvent($JssorSlider$.$EVT_SWIPE_END, V(A.$GetPosition()), A.$GetPosition()); if (!bA.$Position) { aC(bA.$VirtualIndex, bo) } }; by.$OnPositionChange = function (bC, bB) { var bD; if (i) { bD = bu } else { bD = bt; if (bz) { var bA = bB / bz; bD = aP.$SlideEasing(bA) * (bt - bv) + bv } } A.$GoToPosition(bD) }; by.$PlayCarousel = function (bA, bC, bB, bD) { $JssorDebug$.$Execute(function () { if (by.$IsPlaying()) { $JssorDebug$.$Fail("The carousel is already playing.") } }); bv = bA; bt = bC; bz = bB; A.$GoToPosition(bA); by.$GoToPosition(0); by.$PlayToPosition(bB, bD) }; by.$StandBy = function (bA) { i = true; bu = bA; by.$Play(bA, null, true) }; by.$SetStandByPosition = function (bA) { bu = bA }; by.$MoveCarouselTo = function (bA) { A.$GoToPosition(bA) }; A = new aR(); A.$Combine(bx); A.$Combine(bw) } function aY() { var bt = this; var i = aw(); $Jssor$.$CssZIndex(i, 0); $Jssor$.$Css(i, "pointerEvents", "none"); bt.$Elmt = i; bt.$AddClipElement = function (bu) { $Jssor$.$AppendChild(i, bu); $Jssor$.$ShowElement(i) }; bt.$Clear = function () { $Jssor$.$HideElement(i); $Jssor$.$Empty(i) } } function ap(bx, bU) { var bY = this; var bI; var bQ; var bw; var bV; var bC; var bu = bx; var bO; var by; var bT = []; var bP; var bJ; var bW; var bL; var bE; var b0; var bN; var bv; var bB; var bt; $JssorAnimator$.call(bY, -aB, aB + 1, { $SlideItemAnimator: true }); function bX(b1) { bQ && bQ.$Revert(); bI && bI.$Revert(); bD(bx, b1); b0 = true; bI = new ax.$Class(bx, ax, 1); $JssorDebug$.$LiveStamp(bI, "caption_slider_" + az + "_in"); bQ = new ax.$Class(bx, ax); $JssorDebug$.$LiveStamp(bQ, "caption_slider_" + az + "_out"); $JssorDebug$.$Execute(function () { az++ }); bQ.$GoToPosition(0); bI.$GoToPosition(0) } function bZ() { if (bI.$Version < ax.$Version) { bX() } } function bF(b8, b3, b1) { if (!bL) { bL = true; if (by && b1) { var b7 = b1.width; var b4 = b1.height; var b9 = b7; var b5 = b4; if (b7 && b4 && aP.$FillMode) { if (aP.$FillMode & 3 && (!(aP.$FillMode & 4) || b7 > bb || b4 > a2)) { var b2 = false; var b6 = bb / a2 * b4 / b7; if (aP.$FillMode & 1) { b2 = (b6 > 1) } else { if (aP.$FillMode & 2) { b2 = (b6 < 1) } } b9 = b2 ? b7 * a2 / b4 : bb; b5 = b2 ? a2 : b4 * bb / b7 } $Jssor$.$CssWidth(by, b9); $Jssor$.$CssHeight(by, b5); $Jssor$.$CssTop(by, (a2 - b5) / 2); $Jssor$.$CssLeft(by, (bb - b9) / 2) } $Jssor$.$CssPosition(by, "absolute"); G.$TriggerEvent($JssorSlider$.$EVT_LOAD_END, bU) } } $Jssor$.$HideElement(b3); b8 && b8(bY) } function bK(b2, b1, b4, b3) { if (b3 == b && bo == bU && ay) { if (!aF) { var b5 = V(b2); a.$Initialize(b5, bU, b1, bY, b4); b1.$HideContentForSlideshow(); aA.$Locate(b5, 1); aA.$GoToPosition(b5); am.$PlayCarousel(b2, b2, 0) } } } function bH(b2) { if (b2 == b && bo == bU) { if (!bN) { var b1 = null; if (a) { if (a.$Index == bU) { b1 = a.$GetProcessor() } else { a.$Clear() } } bZ(); bN = new j(bx, bU, b1, bY.$GetCaptionSliderIn(), bY.$GetCaptionSliderOut()); bN.$SetPlayer(bB) } !bN.$IsPlaying() && bN.$Replay() } } function bM(b1, b5, b4) { if (b1 == bU) { if (b1 != b5) { a9[b5] && a9[b5].$ParkOut() } else { !b4 && bN && bN.$AdjustIdleOnPark() } bB && bB.$Enable(); var b3 = b = $Jssor$.$GetNow(); bY.$LoadImage($Jssor$.$CreateCallback(null, bH, b3)) } else { var b6 = Math.abs(bU - b1); var b2 = aB + aP.$LazyLoading - 1; if (!bE || b6 <= b2) { bY.$LoadImage() } } } function bA() { if (bo == bU && bN) { bN.$Stop(); bB && bB.$Quit(); bB && bB.$Disable(); bN.$OpenSlideshowPanel() } } function bz() { if (bo == bU && bN) { bN.$Stop() } } function i(b2) { if (aX) { $Jssor$.$StopEvent(b2); var b1 = $Jssor$.$EvtSrc(b2); while (b1 && bx !== b1) { if (b1.tagName == "A") { $Jssor$.$CancelEvent(b2) } try { b1 = b1.parentNode } catch (b3) { break } } } } function bR(b1) { if (!aX) { G.$TriggerEvent($JssorSlider$.$EVT_CLICK, bU, b1) } } function bG() { bB = bv.pInstance; bN && bN.$SetPlayer(bB) } bY.$LoadImage = function (b2, b1) { b1 = b1 || bO; if (bT.length && !bL) { $Jssor$.$ShowElement(b1); if (!bW) { bW = true; G.$TriggerEvent($JssorSlider$.$EVT_LOAD_START, bU); $Jssor$.$Each(bT, function (b3) { if (!$Jssor$.$Attribute(b3, "src")) { b3.src = $Jssor$.$AttributeEx(b3, "src2"); $Jssor$.$CssDisplay(b3, b3["display-origin"]) } }) } $Jssor$.$LoadImages(bT, by, $Jssor$.$CreateCallback(null, bF, b2, b1)) } else { bF(b2, b1) } }; bY.$GoForNextSlide = function () { if (a) { var b5 = a.$GetTransition(t); if (b5) { var b3 = b = $Jssor$.$GetNow(); var b2 = bU + aP.$AutoPlaySteps * v; var b1 = a9[V(b2)]; return b1.$LoadImage($Jssor$.$CreateCallback(null, bK, b2, b1, b5, b3), bO) } } var b4 = bo; if (aP.$AutoPlaySteps < 0) { b4 -= t } aN(b4 + aP.$AutoPlaySteps * v) }; bY.$TryActivate = function () { bM(bU, bU, true) }; bY.$ParkOut = function () { bB && bB.$Quit(); bB && bB.$Disable(); bY.$UnhideContentForSlideshow(); bN && bN.$Abort(); bN = null; bX() }; bY.$StampSlideItemElements = function (b1) { b1 = bt + "_" + b1; $JssorDebug$.$Execute(function () { if (by) { $Jssor$.$Attribute(by, "debug-id", b1 + "_slide_item_image_id") } $Jssor$.$Attribute(bx, "debug-id", b1 + "_slide_item_item_id") }); $JssorDebug$.$Execute(function () { $Jssor$.$Attribute(bC, "debug-id", b1 + "_slide_item_wrapper_id") }); $JssorDebug$.$Execute(function () { $Jssor$.$Attribute(bO, "debug-id", b1 + "_loading_container_id") }) }; bY.$HideContentForSlideshow = function () { $Jssor$.$HideElement(bx) }; bY.$UnhideContentForSlideshow = function () { $Jssor$.$ShowElement(bx) }; bY.$EnablePlayer = function () { bB && bB.$Enable() }; function bD(b2, b1, b4) { $JssorDebug$.$Execute(function () { if ($Jssor$.$Attribute(b2, "jssor-slider")) { $JssorDebug$.$Log("Child slider found.") } }); if ($Jssor$.$Attribute(b2, "jssor-slider")) { return } b4 = b4 || 0; if (!b0) { if (b2.tagName == "IMG") { bT.push(b2); if (!$Jssor$.$Attribute(b2, "src")) { bE = true; b2["display-origin"] = $Jssor$.$CssDisplay(b2); $Jssor$.$HideElement(b2) } } if ($Jssor$.$IsBrowserIe9Earlier()) { $Jssor$.$CssZIndex(b2, ($Jssor$.$CssZIndex(b2) || 0) + 1) } if (aP.$HWA && $Jssor$.$WebKitVersion()) { if ($Jssor$.$WebKitVersion() < 534 || (!B && !$Jssor$.$IsBrowserChrome())) { $Jssor$.$EnableHWA(b2) } } } var b3 = $Jssor$.$Children(b2); $Jssor$.$Each(b3, function (b7, b9) { var b6 = b7.tagName; var b5 = $Jssor$.$AttributeEx(b7, "u"); if (b5 == "player" && !bv) { bv = b7; if (bv.pInstance) { bG() } else { $Jssor$.$AddEvent(bv, "dataavailable", bG) } } if (b5 == "caption") { if (!$Jssor$.$IsBrowserIE() && !b1) { var b8 = $Jssor$.$CloneNode(b7, false, true); $Jssor$.$InsertBefore(b8, b7, b2); $Jssor$.$RemoveElement(b7, b2); b7 = b8; b1 = true } } else { if (!b0 && !b4 && !by) { if (b6 == "A") { if ($Jssor$.$AttributeEx(b7, "u") == "image") { by = $Jssor$.$FindChildByTag(b7, "IMG"); $JssorDebug$.$Execute(function () { if (!by) { $JssorDebug$.$Error("slide html code definition error, no 'IMG' found in a 'image with link' slide.\r\n" + b2.outerHTML) } }) } else { by = $Jssor$.$FindChild(b7, "image", true) } if (by) { bP = b7; $Jssor$.$SetStyles(bP, aJ); bJ = $Jssor$.$CloneNode(bP, true); $Jssor$.$CssDisplay(bJ, "block"); $Jssor$.$SetStyles(bJ, aJ); $Jssor$.$CssOpacity(bJ, 0); $Jssor$.$Css(bJ, "backgroundColor", "#000") } } else { if (b6 == "IMG" && $Jssor$.$AttributeEx(b7, "u") == "image") { by = b7 } } if (by) { by.border = 0; $Jssor$.$SetStyles(by, aJ) } } } bD(b7, b1, b4 + 1) }) } bY.$OnInnerOffsetChange = function (b1, b3) { var b2 = aB - b3; Z(bC, b2) }; bY.$GetCaptionSliderIn = function () { return bI }; bY.$GetCaptionSliderOut = function () { return bQ }; bY.$Index = bU; $JssorObject$.call(bY); var bS = $Jssor$.$FindChild(bx, "thumb", true); if (bS) { bY.$Thumb = $Jssor$.$CloneNode(bS); $Jssor$.$RemoveAttribute(bS, "id"); $Jssor$.$HideElement(bS) } $Jssor$.$ShowElement(bx); bO = $Jssor$.$CloneNode(p); $Jssor$.$CssZIndex(bO, 1000); $Jssor$.$AddEvent(bx, "click", bR); bX(true); bY.$Image = by; bY.$Link = bJ; bY.$Item = bx; bY.$Wrapper = bC = bx; $Jssor$.$AppendChild(bC, bO); G.$On(203, bM); G.$On(28, bz); G.$On(24, bA); $JssorDebug$.$Execute(function () { bt = e++ }); $JssorDebug$.$Execute(function () { $Jssor$.$Attribute(bC, "debug-id", "slide-" + bU) }) } function j(bt, bH, bE, bx, bF) { var bz = this; var bK = 0; var bI = 0; var bM; var bA; var bJ; var i; var by; var bw; var bv; var bu; var bC; var bD = a9[bH]; $JssorAnimator$.call(bz, 0, 0); function bL() { $Jssor$.$Empty(al); if (bj && bw && bD.$Link) { $Jssor$.$AppendChild(al, bD.$Link) } $Jssor$.$ShowElement(al, !bw && bD.$Image) } function bB() { if (bv) { bv = false; G.$TriggerEvent($JssorSlider$.$EVT_ROLLBACK_END, bH, i, bK, bJ, i, by); bz.$GoToPosition(bJ) } bz.$Replay() } function bG(bN) { bC = bN; bz.$Stop(); bz.$Replay() } bz.$Replay = function () { var bN = bz.$GetPosition_Display(); if (!x && !af && !bC && bo == bH) { if (!bN) { if (bM && !bw) { bw = true; bz.$OpenSlideshowPanel(true); G.$TriggerEvent($JssorSlider$.$EVT_SLIDESHOW_START, bH, bK, bI, bM, by) } bL() } var bQ; var bP = $JssorSlider$.$EVT_STATE_CHANGE; if (bN != by) { if (bN == i) { bQ = by } else { if (bN == bJ) { bQ = i } else { if (!bN) { bQ = bJ } else { if (bN > i) { bv = true; bQ = i; bP = $JssorSlider$.$EVT_ROLLBACK_START } else { bQ = bz.$GetPlayToPosition() } } } } } G.$TriggerEvent(bP, bH, bN, bK, bJ, i, by); var bO = ay && (!E || aG); if (bN == by) { (i != by && !(E & 12) || bO) && bD.$GoForNextSlide() } else { if (bO || bN != i) { bz.$PlayToPosition(bQ, bB) } } } }; bz.$AdjustIdleOnPark = function () { if (i == by && i == bz.$GetPosition_Display()) { bz.$GoToPosition(bJ) } }; bz.$Abort = function () { a && a.$Index == bH && a.$Clear(); var bN = bz.$GetPosition_Display(); if (bN < by) { G.$TriggerEvent($JssorSlider$.$EVT_STATE_CHANGE, bH, -bN - 1, bK, bJ, i, by) } }; bz.$OpenSlideshowPanel = function (bN) { if (bE) { $Jssor$.$CssOverflow(a6, bN && bE.$Transition.$Outside ? "" : "hidden") } }; bz.$OnInnerOffsetChange = function (bO, bN) { if (bw && bN >= bM) { bw = false; bL(); bD.$UnhideContentForSlideshow(); a.$Clear(); G.$TriggerEvent($JssorSlider$.$EVT_SLIDESHOW_END, bH, bK, bI, bM, by) } G.$TriggerEvent($JssorSlider$.$EVT_PROGRESS_CHANGE, bH, bN, bK, bJ, i, by) }; bz.$SetPlayer = function (bN) { if (bN && !bu) { bu = bN; bN.$On($JssorPlayer$.$EVT_SWITCH, bG) } }; if (bE) { bz.$Chain(bE) } bM = bz.$GetPosition_OuterEnd(); bA = bz.$GetPosition_OuterEnd(); bz.$Chain(bx); bJ = bx.$GetPosition_OuterEnd(); i = bJ + ($Jssor$.$ParseFloat($Jssor$.$AttributeEx(bt, "idle")) || aU); bF.$Shift(i); bz.$Combine(bF); by = bz.$GetPosition_OuterEnd() } function Z(bv, bt) { var bu = aQ > 0 ? aQ : q; var i = aK * bt * (bu & 1); var bw = aI * bt * ((bu >> 1) & 1); i = Math.round(i); bw = Math.round(bw); $Jssor$.$CssLeft(bv, i); $Jssor$.$CssTop(bv, bw) } function a7() { bk = af; bl = am.$GetPlayToPosition(); m = A.$GetPosition() } function aS() { a7(); if (x || !aG && (E & 12)) { am.$Stop(); G.$TriggerEvent($JssorSlider$.$EVT_FREEZE) } } function aT(bt) { if (!x && (aG || !(E & 12)) && !am.$IsPlaying()) { var bu = A.$GetPosition(); var bv = Math.ceil(m); if (bt && Math.abs(Y) >= aP.$MinDragOffsetToSlide) { bv = Math.ceil(bu); bv += H } if (!(bs & 1)) { bv = Math.min(t - aB, Math.max(bv, 0)) } var i = Math.abs(bv - bu); i = 1 - Math.pow(1 - i, 5); if (!aX && bk) { am.$Continue(bl) } else { if (bu == bv) { o.$EnablePlayer(); o.$TryActivate() } else { am.$PlayCarousel(bu, bv, i * aD) } } } } function bn(i) { if (!$Jssor$.$AttributeEx($Jssor$.$EvtSrc(i), "nodrag")) { $Jssor$.$CancelEvent(i) } } function I(i) { au(i, 1) } function au(bu, bw) { bu = $Jssor$.$GetEvent(bu); var bv = $Jssor$.$EvtSrc(bu); if (!N && !$Jssor$.$AttributeEx(bv, "nodrag") && W() && (!bw || bu.touches.length == 1)) { x = true; ba = false; b = null; $Jssor$.$AddEvent(document, bw ? "touchmove" : "mousemove", ad); a1 = $Jssor$.$GetNow() - 50; aX = 0; aS(); if (!bk) { aQ = 0 } if (bw) { var bt = bu.touches[0]; P = bt.clientX; M = bt.clientY } else { var i = $Jssor$.$MousePosition(bu); P = i.x; M = i.y } Y = 0; w = 0; H = 0; G.$TriggerEvent($JssorSlider$.$EVT_DRAG_START, V(m), m, bu) } } function ad(bu) { if (x) { bu = $Jssor$.$GetEvent(bu); var bv; if (bu.type != "mousemove") { var bw = bu.touches[0]; bv = { x: bw.clientX, y: bw.clientY } } else { bv = $Jssor$.$MousePosition(bu) } if (bv) { var bz = bv.x - P; var by = bv.y - M; if (Math.floor(m) != m) { aQ = aQ || (q & N) } if ((bz || by) && !aQ) { if (N == 3) { if (Math.abs(by) > Math.abs(bz)) { aQ = 2 } else { aQ = 1 } } else { aQ = N } if (f && aQ == 1 && Math.abs(by) - Math.abs(bz) > 3) { ba = true } } if (aQ) { var bt = by; var bx = aI; if (aQ == 1) { bt = bz; bx = aK } if (!(bs & 1)) { if (bt > 0) { var i = bx * bo; var bA = bt - i; if (bA > 0) { bt = i + Math.sqrt(bA) * 5 } } if (bt < 0) { var i = bx * (t - aB - bo); var bA = -bt - i; if (bA > 0) { bt = -i - Math.sqrt(bA) * 5 } } } if (Y - w < -2) { H = 0 } else { if (Y - w > 2) { H = -1 } } w = Y; Y = bt; bf = m - Y / bx / (ae || 1); if (Y && aQ && !ba) { $Jssor$.$CancelEvent(bu); if (!af) { am.$StandBy(bf) } else { am.$SetStandByPosition(bf) } } } } } } function bg() { ai(); if (x) { x = false; a1 = $Jssor$.$GetNow(); $Jssor$.$RemoveEvent(document, "mousemove", ad); $Jssor$.$RemoveEvent(document, "touchmove", ad); aX = Y; am.$Stop(); var i = A.$GetPosition(); G.$TriggerEvent($JssorSlider$.$EVT_DRAG_END, V(i), i, V(m), m); (E & 12) && a7(); aT(true) } } function s(bt) { if (aX) { $Jssor$.$StopEvent(bt); var i = $Jssor$.$EvtSrc(bt); while (i && J !== i) { if (i.tagName == "A") { $Jssor$.$CancelEvent(bt) } try { i = i.parentNode } catch (bu) { break } } } } function L(i) { U = a9[bo]; an = bo; bo = V(i); o = a9[bo]; g(i); return bo } function aC(bt, i) { aQ = 0; L(bt); G.$TriggerEvent($JssorSlider$.$EVT_PARK, V(bt), i) } function g(bt, i) { l = bt; $Jssor$.$Each(a3, function (bu) { bu.$SetCurrentIndex(V(bt), bt, i) }) } function W() { var i = $JssorSlider$.$DragRegistry || 0; var bt = D; if (f) { (bt & 1) && (bt &= 1) } $JssorSlider$.$DragRegistry |= bt; return (N = bt & ~i) } function ai() { if (N) { $JssorSlider$.$DragRegistry &= ~D; N = 0 } } function aw() { var i = $Jssor$.$CreateDiv(); $Jssor$.$SetStyles(i, aJ); $Jssor$.$CssPosition(i, "absolute"); return i } function V(i) { return (i % t + t) % t } function r(i) { return V(i) == bo } function aL(i) { return V(i) == an } function X(i, bt) { if (bt) { if (!bs) { i = Math.min(Math.max(i + l, 0), t - aB); bt = false } else { if (bs & 2) { i = V(i + l); bt = false } } } aN(i, aP.$SlideDuration, bt) } function k() { $Jssor$.$Each(a3, function (i) { i.$Show(i.$Options.$ChanceToShow <= aG) }) } function ak() { if (!aG) { aG = 1; k(); if (!x) { (E & 12) && aT(); (E & 3) && a9[bo].$TryActivate() } } } function n() { if (aG) { aG = 0; k(); x || !(E & 12) || aS() } } function O() { aJ = { $Width: bb, $Height: a2, $Top: 0, $Left: 0 }; $Jssor$.$Each(bq, function (bu, bt) { $Jssor$.$SetStyles(bu, aJ); $Jssor$.$CssPosition(bu, "absolute"); $Jssor$.$CssOverflow(bu, "hidden"); $Jssor$.$HideElement(bu) }); $Jssor$.$SetStyles(p, aJ) } function ah(bt, i) { aN(bt, i, true) } function aN(by, bv, bw) { if (aE && (!x || aP.$NaviQuitDrag)) { af = true; x = false; am.$Stop(); if (bv == undefined) { bv = aD } var i = a5.$GetPosition_Display(); var bu = by; if (bw) { bu = i + by; if (by > 0) { bu = Math.ceil(bu) } else { bu = Math.floor(bu) } } if (bs & 2) { bu = V(bu) } if (!(bs & 1)) { bu = Math.max(0, Math.min(bu, t - aB)) } var bt = (bu - i) % t; bu = i + bt; var bx = i == bu ? 0 : bv * Math.abs(bt); bx = Math.min(bx, bv * aB * 1.5); am.$PlayCarousel(i, bu, bx || 1) } } G.$PlayTo = aN; G.$GoTo = function (i) { aN(i, 1) }; G.$Next = function () { ah(1) }; G.$Prev = function () { ah(-1) }; G.$Pause = function () { ay = false }; G.$Play = function () { if (!ay) { ay = true; a9[bo] && a9[bo].$TryActivate() } }; G.$SetSlideshowTransitions = function (i) { $JssorDebug$.$Execute(function () { if (!i || !i.length) { $JssorDebug$.$Error("Can not set slideshow transitions, no transitions specified.") } }); aP.$SlideshowOptions.$Transitions = i }; G.$SetCaptionTransitions = function (i) { $JssorDebug$.$Execute(function () { if (!i || !i.length) { $JssorDebug$.$Error("Can not set caption transitions, no transitions specified") } }); ax.$CaptionTransitions = i; ax.$Version = $Jssor$.$GetNow() }; G.$SlidesCount = function () { return bq.length }; G.$CurrentIndex = function () { return bo }; G.$IsAutoPlaying = function () { return ay }; G.$IsDragging = function () { return x }; G.$IsSliding = function () { return af }; G.$IsMouseOver = function () { return !aG }; G.$LastDragSucceded = function () { return aX }; function a4() { return $Jssor$.$CssWidth(a0 || bp) } function K() { return $Jssor$.$CssHeight(a0 || bp) } G.$OriginalWidth = G.$GetOriginalWidth = a4; G.$OriginalHeight = G.$GetOriginalHeight = K; function bd(bx, bw) { if (bx == undefined) { return $Jssor$.$CssWidth(bp) } if (!a0) { $JssorDebug$.$Execute(function () { var bA = $Jssor$.$Css(bp, "width"); var by = $Jssor$.$Css(bp, "height"); var bB = $Jssor$.$CssP(bp, "width"); var bz = $Jssor$.$CssP(bp, "height"); if (!bA || bA.indexOf("px") == -1) { $JssorDebug$.$Fail("Cannot scale jssor slider, 'width' of 'outer container' not specified. Please specify 'width' in pixel. e.g. 'width: 900px;'") } if (!by || by.indexOf("px") == -1) { $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not specified. Please specify 'height' in pixel. e.g. 'height: 520px;'") } if (bA.indexOf("%") != -1) { $JssorDebug$.$Fail("Cannot scale jssor slider, 'width' of 'outer container' not valid. Please specify 'width' in pixel. e.g. 'width: 900px;'") } if (by.indexOf("%") != -1) { $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not valid. Please specify 'height' in pixel. e.g. 'height: 520px;'") } if (!bB) { $JssorDebug$.$Fail("Cannot scale jssor slider, 'width' of 'outer container' not valid. 'width' of 'outer container' should be positive number. e.g. 'width: 900px;'") } if (!bz) { $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not valid. 'height' of 'outer container' should be positive number. e.g. 'height: 520px;'") } }); var bu = $Jssor$.$CreateDiv(document); $Jssor$.$ClassName(bu, $Jssor$.$ClassName(bp)); $Jssor$.$CssCssText(bu, $Jssor$.$CssCssText(bp)); $Jssor$.$CssDisplay(bu, "block"); $Jssor$.$CssPosition(bu, "relative"); $Jssor$.$CssTop(bu, 0); $Jssor$.$CssLeft(bu, 0); $Jssor$.$CssOverflow(bu, "visible"); a0 = $Jssor$.$CreateDiv(document); $Jssor$.$CssPosition(a0, "absolute"); $Jssor$.$CssTop(a0, 0); $Jssor$.$CssLeft(a0, 0); $Jssor$.$CssWidth(a0, $Jssor$.$CssWidth(bp)); $Jssor$.$CssHeight(a0, $Jssor$.$CssHeight(bp)); $Jssor$.$SetStyleTransformOrigin(a0, "0 0"); $Jssor$.$AppendChild(a0, bu); var bt = $Jssor$.$Children(bp); $Jssor$.$AppendChild(bp, a0); $Jssor$.$Css(bp, "backgroundImage", ""); $Jssor$.$Each(bt, function (by) { $Jssor$.$AppendChild($Jssor$.$AttributeEx(by, "noscale") ? bp : bu, by) }) } $JssorDebug$.$Execute(function () { if (!bx || bx < 0) { $JssorDebug$.$Fail("'$ScaleWidth' error, 'dimension' should be positive value.") } }); $JssorDebug$.$Execute(function () { if (!ag) { ag = G.$Elmt.scrollWidth } }); ae = bx / (bw ? $Jssor$.$CssHeight : $Jssor$.$CssWidth)(a0); $Jssor$.$CssScale(a0, ae); var bv = bw ? (ae * a4()) : bx; var i = bw ? bx : (ae * K()); $Jssor$.$CssWidth(bp, bv); $Jssor$.$CssHeight(bp, i); $Jssor$.$Each(a3, function (by) { by.$Relocate(bv, i) }) } G.$ScaleHeight = G.$GetScaleHeight = function (i) { if (i == undefined) { return $Jssor$.$CssHeight(bp) } bd(i, true) }; G.$ScaleWidth = G.$SetScaleWidth = G.$GetScaleWidth = bd; G.$GetVirtualIndex = function (bt) { var bu = Math.ceil(V(ac / c)); var i = V(bt - bo + bu); if (i > aB) { if (bt - bo > t / 2) { bt -= t } else { if (bt - bo <= -t / 2) { bt += t } } } else { bt = bo + i - bu } return bt }; $JssorObject$.call(G); $JssorDebug$.$Execute(function () { var i = $Jssor$.$GetElement(bp); if (!i) { $JssorDebug$.$Fail("Outer container '" + bp + "' not found.") } }); G.$Elmt = bp = $Jssor$.$GetElement(bp); var ag; var az = 1; var aP = $Jssor$.$Extend({ $FillMode: 0, $LazyLoading: 1, $StartIndex: 0, $AutoPlay: false, $Loop: 1, $HWA: true, $NaviQuitDrag: true, $AutoPlaySteps: 1, $AutoPlayInterval: 3000, $PauseOnHover: 1, $SlideDuration: 500, $SlideEasing: $JssorEasing$.$EaseOutQuad, $MinDragOffsetToSlide: 20, $SlideSpacing: 0, $DisplayPieces: 1, $ParkingPosition: 0, $UISearchMode: 1, $PlayOrientation: 1, $DragOrientation: 1 }, aH); if (aP.$Idle != undefined) { aP.$AutoPlayInterval = aP.$Idle } if (aP.$Cols != undefined) { aP.$DisplayPieces = aP.$Cols } $JssorDebug$.$Execute(function () { aP = $Jssor$.$Extend({ $ArrowKeyNavigation: undefined, $SlideWidth: undefined, $SlideHeight: undefined, $SlideshowOptions: undefined, $CaptionSliderOptions: undefined, $BulletNavigatorOptions: undefined, $ArrowNavigatorOptions: undefined, $ThumbnailNavigatorOptions: undefined }, aP) }); var q = aP.$PlayOrientation & 3; var v = (aP.$PlayOrientation & 4) / -4 || 1; var aV = aP.$SlideshowOptions; var ax = $Jssor$.$Extend({ $Class: $JssorCaptionSliderBase$, $PlayInMode: 1, $PlayOutMode: 1 }, aP.$CaptionSliderOptions); var z = aP.$BulletNavigatorOptions; var aO = aP.$ArrowNavigatorOptions; var bi = aP.$ThumbnailNavigatorOptions; $JssorDebug$.$Execute(function () { if (aV && !aV.$Class) { $JssorDebug$.$Fail("Option $SlideshowOptions error, class not specified.") } }); $JssorDebug$.$Execute(function () { if (aP.$CaptionSliderOptions && !aP.$CaptionSliderOptions.$Class) { $JssorDebug$.$Fail("Option $CaptionSliderOptions error, class not specified.") } }); $JssorDebug$.$Execute(function () { if (z && !z.$Class) { $JssorDebug$.$Fail("Option $BulletNavigatorOptions error, class not specified.") } }); $JssorDebug$.$Execute(function () { if (aO && !aO.$Class) { $JssorDebug$.$Fail("Option $ArrowNavigatorOptions error, class not specified.") } }); $JssorDebug$.$Execute(function () { if (bi && !bi.$Class) { $JssorDebug$.$Fail("Option $ThumbnailNavigatorOptions error, class not specified.") } }); var aW = !aP.$UISearchMode; var a0; var J = $Jssor$.$FindChild(bp, "slides", aW); var p = $Jssor$.$FindChild(bp, "loading", aW) || $Jssor$.$CreateDiv(document); var ao = $Jssor$.$FindChild(bp, "navigator", aW); var u = $Jssor$.$FindChild(bp, "arrowleft", aW); var be = $Jssor$.$FindChild(bp, "arrowright", aW); var ab = $Jssor$.$FindChild(bp, "thumbnavigator", aW); $JssorDebug$.$Execute(function () { if (ao && !z) { throw new Error("Bullet navigator container defined but $BulletNavigatorOptions not specified.") } if ((u || be) && !aO) { throw new Error("arrowleft or arrowright defined, but $ArrowNavigatorOptions not specified.") } if (ab && !bi) { throw new Error("Thumbnail navigator container defined, but $ThumbnailNavigatorOptions not specified.") } }); var aj = $Jssor$.$CssWidth(J); var d = $Jssor$.$CssHeight(J); $JssorDebug$.$Execute(function () { if (isNaN(aj)) { $JssorDebug$.$Fail("Width of slides container wrong specification, it should be specified in pixel (like style='width: 600px;').") } if (aj == undefined) { $JssorDebug$.$Fail("Width of slides container not specified, it should be specified in pixel (like style='width: 600px;').") } if (isNaN(d)) { $JssorDebug$.$Fail("Height of slides container wrong specification, it should be specified in pixel (like style='height: 300px;').") } if (d == undefined) { $JssorDebug$.$Fail("Height of slides container not specified, it should be specified in pixel (like style='height: 300px;').") } var bu = $Jssor$.$CssOverflow(J); var bt = $Jssor$.$Css(J, "overflowX"); var i = $Jssor$.$Css(J, "overflowY"); if (bu != "hidden" && (bt != "hidden" || i != "hidden")) { $JssorDebug$.$Fail("Overflow of slides container wrong specification, it should be specified as 'hidden' (style='overflow-y:hidden;').") } }); $JssorDebug$.$Execute(function () { if (!$Jssor$.$IsNumeric(aP.$DisplayPieces)) { $JssorDebug$.$Fail("Option $DisplayPieces error, it should be a numeric value and greater than or equal to 1.") } if (aP.$DisplayPieces < 1) { $JssorDebug$.$Fail("Option $DisplayPieces error, it should be greater than or equal to 1.") } if (aP.$DisplayPieces > 1 && aP.$DragOrientation && aP.$DragOrientation != q) { $JssorDebug$.$Fail("Option $DragOrientation error, it should be 0 or the same of $PlayOrientation when $DisplayPieces is greater than 1.") } if (!$Jssor$.$IsNumeric(aP.$ParkingPosition)) { $JssorDebug$.$Fail("Option $ParkingPosition error, it should be a numeric value.") } if (aP.$ParkingPosition && aP.$DragOrientation && aP.$DragOrientation != q) { $JssorDebug$.$Fail("Option $DragOrientation error, it should be 0 or the same of $PlayOrientation when $ParkingPosition is not equal to 0.") } }); var aJ; var bq = []; var aa = $Jssor$.$Children(J); $Jssor$.$Each(aa, function (i) { if (i.tagName == "DIV" && !$Jssor$.$AttributeEx(i, "u")) { bq.push(i) } else { if ($Jssor$.$IsBrowserIe9Earlier()) { $Jssor$.$CssZIndex(i, ($Jssor$.$CssZIndex(i) || 0) + 1) } } }); $JssorDebug$.$Execute(function () { if (bq.length < 1) { $JssorDebug$.$Error("Slides html code definition error, there must be at least 1 slide to initialize a slider.") } }); var e = 0; var aZ = 0; var an; var bo = -1; var l; var U; var o; var t = bq.length; var bb = aP.$SlideWidth || aj; var a2 = aP.$SlideHeight || d; var aM = aP.$SlideSpacing; var aK = bb + aM; var aI = a2 + aM; var c = (q & 1) ? aK : aI; var aB = Math.min(aP.$DisplayPieces, t); var a6; var br = 0; var aQ; var N; var ba; var a3 = []; var bh; var C; var y; var bj; var aF; var ay; var av = aP.$AutoPlaySteps; var E = aP.$PauseOnHover; var aU = aP.$AutoPlayInterval; var aD = aP.$SlideDuration; var at; var T; var B; var ac; var aE = aB < t; var bs = aE ? aP.$Loop : 0; var D; var aX; var aG = 1; var af; var x; var b; var P = 0; var M = 0; var Y; var w; var H; var a5; var A; var aA; var am; var F = new aY(); var ae; ay = aP.$AutoPlay; G.$Options = aH; O(); $Jssor$.$Attribute(bp, "jssor-slider", true); $Jssor$.$CssZIndex(J, $Jssor$.$CssZIndex(J) || 0); $Jssor$.$CssPosition(J, "absolute"); a6 = $Jssor$.$CloneNode(J, true); $Jssor$.$InsertBefore(a6, J); if (aV) { bj = aV.$ShowLink; at = aV.$Class; $JssorDebug$.$Execute(function () { if (!aV.$Transitions || !aV.$Transitions.length) { $JssorDebug$.$Error("Invalid '$SlideshowOptions', no '$Transitions' specified.") } }); B = aB == 1 && t > 1 && at && (!$Jssor$.$IsBrowserIE() || $Jssor$.$BrowserVersion() >= 8) } ac = (B || aB >= t || !(bs & 1)) ? 0 : aP.$ParkingPosition; D = ((aB > 1 || ac) ? q : -1) & aP.$DragOrientation; var bm = J; var a9 = []; var a; var al; var a8 = $Jssor$.$Device(); var f = a8.$Touchable; var a1; var m; var bk; var bl; var bf; if (a8.$TouchActionAttr) { $Jssor$.$Css(bm, a8.$TouchActionAttr, [null, "pan-y", "pan-x", "none"][D] || "") } aA = new Q(); if (B) { a = new at(F, bb, a2, aV, f) } $Jssor$.$AppendChild(a6, aA.$Wrapper); $Jssor$.$CssOverflow(J, "hidden"); al = aw(); $Jssor$.$Css(al, "backgroundColor", "#000"); $Jssor$.$CssOpacity(al, 0); $Jssor$.$InsertBefore(al, bm.firstChild, bm); for (var ar = 0; ar < bq.length; ar++) { var S = bq[ar]; var aq = new ap(S, ar); a9.push(aq) } $Jssor$.$HideElement(p); $JssorDebug$.$Execute(function () { $Jssor$.$Attribute(p, "debug-id", "loading-container") }); a5 = new R(); am = new bc(a5, aA); $JssorDebug$.$Execute(function () { $Jssor$.$Attribute(bm, "debug-id", "slide-board") }); if (D) { $Jssor$.$AddEvent(J, "mousedown", au); $Jssor$.$AddEvent(J, "touchstart", I); $Jssor$.$AddEvent(J, "dragstart", bn); $Jssor$.$AddEvent(J, "selectstart", bn); $Jssor$.$AddEvent(document, "mouseup", bg); $Jssor$.$AddEvent(document, "touchend", bg); $Jssor$.$AddEvent(document, "touchcancel", bg); $Jssor$.$AddEvent(window, "blur", bg) } E &= (f ? 10 : 5); if (ao && z) { bh = new z.$Class(ao, z, a4(), K()); a3.push(bh) } if (aO && u && be) { aO.$Loop = bs; aO.$DisplayPieces = aB; C = new aO.$Class(u, be, aO, a4(), K()); a3.push(C) } if (ab && bi) { bi.$StartIndex = aP.$StartIndex; y = new bi.$Class(ab, bi); a3.push(y) } $Jssor$.$Each(a3, function (i) { i.$Reset(t, a9, p); i.$On($JssorNavigatorEvents$.$NAVIGATIONREQUEST, X) }); bd(a4()); $Jssor$.$AddEvent(J, "click", s); $Jssor$.$AddEvent(bp, "mouseout", $Jssor$.$MouseOverOutFilter(ak, bp)); $Jssor$.$AddEvent(bp, "mouseover", $Jssor$.$MouseOverOutFilter(n, bp)); k(); if (aP.$ArrowKeyNavigation) { $Jssor$.$AddEvent(document, "keydown", function (i) { if (i.keyCode == 37) { ah(-1) } else { if (i.keyCode == 39) { ah(1) } } }) } var h = aP.$StartIndex; if (!(bs & 1)) { h = Math.max(0, Math.min(h, t - aB)) } am.$PlayCarousel(h, h, 0) }; var $JssorSlideo$ = window.$JssorSlideo$ = $JssorSlider$; $JssorSlider$.$EVT_CLICK = 21; $JssorSlider$.$EVT_DRAG_START = 22; $JssorSlider$.$EVT_DRAG_END = 23; $JssorSlider$.$EVT_SWIPE_START = 24; $JssorSlider$.$EVT_SWIPE_END = 25; $JssorSlider$.$EVT_LOAD_START = 26; $JssorSlider$.$EVT_LOAD_END = 27; $JssorSlider$.$EVT_FREEZE = 28; $JssorSlider$.$EVT_POSITION_CHANGE = 202; $JssorSlider$.$EVT_PARK = 203; $JssorSlider$.$EVT_SLIDESHOW_START = 206; $JssorSlider$.$EVT_SLIDESHOW_END = 207; $JssorSlider$.$EVT_PROGRESS_CHANGE = 208; $JssorSlider$.$EVT_STATE_CHANGE = 209; $JssorSlider$.$EVT_ROLLBACK_START = 210; $JssorSlider$.$EVT_ROLLBACK_END = 211; var $JssorNavigatorEvents$ = { $NAVIGATIONREQUEST: 1, $INDEXCHANGE: 2, $RESET: 3 }; var $JssorThumbnailNavigator$ = window.$JssorThumbnailNavigator$ = function (h, d) { var i = this; var k; var c; var a; var e; var b = []; var l; var u; var q; var m; var j; var g; var s; var t; var v; var f = -1; var n; var o; $JssorObject$.call(i); h = $Jssor$.$GetElement(h); function r(A, y) { var x = this; var z; var B; var D; function w(E) { B.$Selected(a == y) } function C(F) { if (!v.$LastDragSucceded()) { var E = q - y % q; var H = v.$GetVirtualIndex((y + E) / q - 1); var G = H * q + q - E; i.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, G) } } $JssorDebug$.$Execute(function () { x.$Wrapper = undefined }); x.$Index = y; x.$Highlight = w; D = A.$Thumb || A.$Image || $Jssor$.$CreateDiv(); x.$Wrapper = z = $Jssor$.$BuildElement(o, "thumbnailtemplate", D, true); B = $Jssor$.$Buttonize(z); if (e.$ActionMode & 1) { $Jssor$.$AddEvent(z, "click", C) } if (e.$ActionMode & 2) { $Jssor$.$AddEvent(z, "mouseover", $Jssor$.$MouseOverOutFilter(C, z)) } } i.$GetCurrentIndex = function () { return a }; i.$SetCurrentIndex = function (y, x, w) { var z = a; a = y; if (z != -1) { b[z].$Highlight() } b[y].$Highlight(); if (!w) { v.$PlayTo(v.$GetVirtualIndex(Math.floor(x / q))) } }; i.$Show = function (w) { $Jssor$.$ShowElement(h, w) }; i.$Relocate = $Jssor$.$EmptyFunction; var p; i.$Reset = function (z, E, w) { if (!p) { k = z; c = Math.ceil(k / q); a = -1; t = Math.min(t, E.length); var x = e.$Orientation & 1; var A = g + (g + m) * (q - 1) * (1 - x); var D = s + (s + j) * (q - 1) * x; var B = A + (A + m) * (t - 1) * x; var F = D + (D + j) * (t - 1) * (1 - x); $Jssor$.$CssPosition(n, "absolute"); $Jssor$.$CssOverflow(n, "hidden"); if (e.$AutoCenter & 1) { $Jssor$.$CssLeft(n, (l - B) / 2) } if (e.$AutoCenter & 2) { $Jssor$.$CssTop(n, (u - F) / 2) } $Jssor$.$CssWidth(n, B); $Jssor$.$CssHeight(n, F); var y = []; $Jssor$.$Each(E, function (J, H) { var L = new r(J, H); var K = L.$Wrapper; var I = Math.floor(H / q); var G = H % q; $Jssor$.$CssLeft(K, (g + m) * G * (1 - x)); $Jssor$.$CssTop(K, (s + j) * G * x); if (!y[I]) { y[I] = $Jssor$.$CreateDiv(); $Jssor$.$AppendChild(n, y[I]) } $Jssor$.$AppendChild(y[I], K); b.push(L) }); var C = $Jssor$.$Extend({ $HWA: false, $AutoPlay: false, $NaviQuitDrag: false, $SlideWidth: A, $SlideHeight: D, $SlideSpacing: m * x + j * (1 - x), $MinDragOffsetToSlide: 12, $SlideDuration: 200, $PauseOnHover: 1, $PlayOrientation: e.$Orientation, $DragOrientation: e.$DisableDrag ? 0 : e.$Orientation }, e); v = new $JssorSlider$(h, C); p = true } }; i.$Options = e = $Jssor$.$Extend({ $SpacingX: 3, $SpacingY: 3, $DisplayPieces: 1, $Orientation: 1, $AutoCenter: 3, $ActionMode: 1 }, d); if (e.$Rows != undefined) { e.$Lanes = e.$Rows } $JssorDebug$.$Execute(function () { e = $Jssor$.$Extend({ $Lanes: undefined, $Width: undefined, $Height: undefined }, e) }); l = $Jssor$.$CssWidth(h); u = $Jssor$.$CssHeight(h); $JssorDebug$.$Execute(function () { if (!l) { $JssorDebug$.$Fail("width of 'thumbnavigator' container not specified.") } if (!u) { $JssorDebug$.$Fail("height of 'thumbnavigator' container not specified.") } }); n = $Jssor$.$FindChild(h, "slides", true); o = $Jssor$.$FindChild(n, "prototype"); g = $Jssor$.$CssWidth(o); s = $Jssor$.$CssHeight(o); $Jssor$.$RemoveElement(o, n); q = e.$Lanes || 1; m = e.$SpacingX; j = e.$SpacingY; t = e.$DisplayPieces; if (e.$Scale == false) { $Jssor$.$Attribute(h, "noscale", true) } }; function $JssorCaptionSliderBase$() { $JssorAnimator$.call(this, 0, 0); this.$Revert = $Jssor$.$EmptyFunction } jQuery(document).ready(function (d) { var c = { $AutoPlay: true, $AutoPlaySteps: 1, $AutoPlayInterval: 4000, $PauseOnHover: 1, $Loop: 0, $ArrowKeyNavigation: true, $SlideDuration: 500, $MinDragOffsetToSlide: 20, $SlideSpacing: 5, $DisplayPieces: 1, $ParkingPosition: 0, $UISearchMode: 1, $PlayOrientation: 1, $DragOrientation: 3, $ThumbnailNavigatorOptions: { $Class: $JssorThumbnailNavigator$, $ChanceToShow: 2, $Loop: 2, $AutoCenter: 5, $Lanes: 1, $SpacingX: 5, $SpacingY: 12, $DisplayPieces: 5, $ParkingPosition: 0, $Orientation: 2, $DisableDrag: false } }; var a = new $JssorSlider$("slider1_container", c); function b() { var e = a.$Elmt.parentNode.clientWidth; if (e) { var f = e; a.$ScaleWidth(f) } else { window.setTimeout(b, 30) } } b(); d(window).bind("load", b); d(window).bind("resize", b); d(window).bind("orientationchange", b) });